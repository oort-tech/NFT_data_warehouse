specVersion: 0.0.4
schema:
  file: ./schema.graphql
dataSources:
  # - kind: ethereum
  #   name: OpenSeaDev
  #   network: mainnet
  #   source:
  #     # Replace with the OpenSea smart contract's address
  #     address: "0x53F6337d308FfB2c52eDa319Be216cC7321D3725"
  #     abi: OpenSea
  #     # Replace with the OpenSea smart contract's start block
  #     startBlock: 2
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities: []
  #     abis:
  #       - name: OpenSea
  #         file: ./abis/OpenSeaV1.json
  #       - name: ERC165
  #         file: ./abis/ERC165.json
  #       - name: NftMetadata
  #         file: ./abis/NftMetadata.json
  #     callHandlers:
  #       - function: atomicMatch_(address[14],uint256[18],uint8[8],bytes,bytes,bytes,bytes,bytes,bytes,uint8[2],bytes32[5])
  #         handler: handleMatch
  #     file: ./src/mappings.ts
  - kind: ethereum
    name: OpenSeaProd
    network: mainnet
    source:
      # Replace with the OpenSea smart contract's address
      address: "0x7be8076f4ea4a4ad08075c2508e481d6c946d12b"
      abi: OpenSea
      # Replace with the OpenSea smart contract's start block
      startBlock: 5774644
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities: []
      abis:
        - name: OpenSea
          file: ./abis/OpenSeaV1.json
        - name: ERC165
          file: ./abis/ERC165.json
        - name: NftMetadata
          file: ./abis/NftMetadata.json
      callHandlers:
        - function: atomicMatch_(address[14],uint256[18],uint8[8],bytes,bytes,bytes,bytes,bytes,bytes,uint8[2],bytes32[5])
          handler: handleMatch
      file: ./src/mappings.ts
